<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{a76c3da7-8f6e-458f-9e74-7b7fc4cfb652}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	previousTime: ULINT := 0;
	currentTime: ULINT := 0;
	
	loTime: UDINT := 0;
	hiTime: UDINT := 0;
	getTime: GETSYSTEMTIME;
	
	deltaTime: REAL := 0.0;
	
	skogestadPID: Skogestad;
	parallelPID: ParallelPID;

	
	lastPID: REAL := 0;
	useSkogestad: BOOL := TRUE;
	
	init: BOOL := TRUE;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF init THEN
	lastPID := GVL.kp + GVL.ki + GVL.kd;
END_IF

// Update the useSkogestad flag based if the tuner has changed PID
IF NOT (lastPID = GVL.kp + GVL.ki + GVL.kd) THEN
    useSkogestad := FALSE;
END_IF

// Get the current system time
getTime(timeLoDW => loTime, 
		timeHiDW => hiTime);
currentTime := UDINT_TO_ULINT(SHL(hiTime, 31) + loTime);

// Calculate deltaTime
IF (previousTime = 0) THEN
    previousTime := currentTime;
ELSE
    deltaTime := ULINT_TO_REAL(currentTime - previousTime) / 10000000;
    previousTime := currentTime;
END_IF

// Execute the appropriate PID controller
IF NOT (deltaTime = 0.0) THEN
    IF useSkogestad THEN
        skogestadPID(
            rFeedbackVariable := GVL.rTempSensor,
            rSetpoint := GVL.rSetpoint,
            rDeltaTime := deltaTime,
            iOutput => GVL.iHeaterActuator
        );
    ELSE
        parallelPID(
            rFeedbackVariable := GVL.rTempSensor,
            rSetpoint := GVL.rSetpoint,
            rDeltaTime := deltaTime,
            iOutput => GVL.iHeaterActuator
        );
    END_IF
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>