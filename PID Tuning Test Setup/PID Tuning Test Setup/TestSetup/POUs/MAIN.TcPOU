<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4024.12">
  <POU Name="MAIN" Id="{a76c3da7-8f6e-458f-9e74-7b7fc4cfb652}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	previousTime: ULINT := 0;
	currentTime: ULINT := 0;
	
	loTime: ULINT := 0;
	hiTime: ULINT := 0;
	getTime: GETSYSTEMTIME;
	
	deltaTime: REAL := 0.0;
	skippedDeltaTime: REAL := 0.0;
	
	skogestadPID: Skogestad;
	parallelPID: ParallelPID;
	
	init: BOOL := TRUE;
END_VAR]]></Declaration>
    <Implementation>
      <ST><![CDATA[// Get current system time
getTime(timeLoDW => loTime, timeHiDW => hiTime);
currentTime := SHL(hiTime, 32) + loTime;

// Calculate deltaTime
IF previousTime = 0 THEN
    previousTime := currentTime;
	RETURN;
ELSE
    deltaTime := ULINT_TO_REAL(currentTime - previousTime) / 10000000;
    previousTime := currentTime;
END_IF

// Execute skogestad if we should be tuning
IF GVL.doTuning THEN
	skogestadPID(
		rFeedbackVariable := GVL.rTempSensor,
		rSetpoint := GVL.rSetpoint,
		rDeltaTime := deltaTime,
		iOutput => GVL.iHeaterActuator
	);	
ELSE
	parallelPID(
		rFeedbackVariable := GVL.rTempSensor,
		rSetpoint := GVL.rSetpoint,
		rDeltaTime := deltaTime,
		iOutput => GVL.iHeaterActuator
	);
	// TestRealPower(currentOutput => GVl.iHeaterActuator);
END_IF

IF GVL.currentCycle = GVL.cyclesToSkip THEN
	GVL.currentCycle := 0;
	
	GVL.arTempData[GVL.currentIndex] := GVL.rTempSensor;
	GVL.arControllerData[GVL.currentIndex] := GVL.iHeaterActuator;
	GVL.arRealPowerData[GVL.currentIndex] := GVL.iRealPower;
	GVL.arSetpointData[GVL.currentIndex] := GVL.rSetpoint;
	GVL.currentIndex := GVL.currentIndex + 1;
	IF GVL.currentIndex > GVL.iMaxIndex THEN
		GVL.currentIndex := 0;
	END_IF
	
	skippedDeltaTime := 0;
ELSE
	skippedDeltaTime := skippedDeltaTime + deltaTime;
	GVL.currentCycle := GVL.currentCycle + 1;
END_IF]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>